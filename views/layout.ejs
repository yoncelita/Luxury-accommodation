<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%- title %>
    </title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/styles.css">
    <div class="snow-container"></div>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400..700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css">

</head>

<body>

    <div class="snow-container"></div>

    <!-- Social icons -->
<!-- <i class="fab fa-facebook-f"></i> -->
 <!-- <i class="fab fa-instagram"></i> -->
    <div class="social-icons-vertical">
        <a href="https://facebook.com" class="text-dark" target="_blank">
            <img src="/images/facebook-icon.svg" alt="facebook" width="35"/>
        </a>
        <a href="https://instagram.com" class="text-dark" target="_blank">
            <img src="/images/instagram-icon.svg" alt="instagram" width="35"/>
        </a>
    </div>


    <header class="fixed-top transparent" style="width: 100%; z-index: 1030;">
        <nav class="navbar">
            <div class="container">
                <a class="logo navbar-brand fw-bold text-dark" href="/">
                    <img src="/images/logo.svg" alt="logo">
                </a>

                <!-- Navbar Toggler (only visible on mobile) -->
                <button class="navbar-toggler d-lg-none" type="button" data-bs-toggle="offcanvas"
                    data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar" aria-expanded="false"
                    aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <!-- Navbar Links (visible on larger screens) -->
                <div class="d-none d-lg-flex">
                    <ul class="navbar-nav ms-auto flex-row gap-3">
                        <li class="nav-item"><a class="nav-link" href="/facilities">Facilities &
                                Services</a>
                        </li>
                        <li class="nav-item"><a class="nav-link" href="/gallery">Gallery</a></li>
                        <li class="nav-item"><a class="nav-link" href="/availability">Availability <span
                                    class="booked">24/25</span></a>
                        </li>
                        <li class="nav-item"><a class="nav-link" href="/contact">Contact</a></li>
                    </ul>
                </div>
            </div>
        </nav>

        <!-- Offcanvas Menu (only visible on mobile) -->
        <div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasNavbar"
            aria-labelledby="offcanvasNavbarLabel">
            <div class="offcanvas-header">
                <h5 class="offcanvas-title invisible" id="offcanvasNavbarLabel">Menu</h5>
                <!-- <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button> -->
                <span class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></span>
            </div>
            <div class="offcanvas-body">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item"><a class="nav-link text-dark" href="/facilities">Facilities & Services</a></li>
                    <li class="nav-item"><a class="nav-link text-dark" href="/gallery">Gallery</a></li>
                    <li class="nav-item"><a class="nav-link text-dark" href="/availability">Availability</a></li>
                    <li class="nav-item"><a class="nav-link text-dark" href="/contact">Contact</a></li>
                </ul>
            </div>
            <div class="offcanvas-footer">
                <div class="social-icons-horizontal">
                    <a href="https://facebook.com" class="text-dark" target="_blank">
                        <i class="fab fa-facebook-f"></i>
                    </a>
                    <a href="https://instagram.com" class="text-dark" target="_blank">
                        <i class="fab fa-instagram"></i>
                    </a>
                </div>
            </div>
        </div>
        </div>
    </header>




    <main class="hero-container">
        <%- include(content) %>
    </main>
    <footer class="bg-light py-3">
        <div class="container">
            <p class="text-center">&copy; 2024 Alpine Villa</p>
        </div>
    </footer>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>

    <script>
        const offcanvas = document.getElementById('offcanvasNavbar');
        const socialIcons = document.querySelector('.social-icons-vertical');
        offcanvas.addEventListener('show.bs.offcanvas', function () {
            socialIcons.classList.add('invisible');
        });

        offcanvas.addEventListener('hide.bs.offcanvas', function () {
            socialIcons.classList.remove('invisible');
        });




        document.addEventListener('DOMContentLoaded', function () {
            const header = document.querySelector('header');
            const navLinks = document.querySelectorAll('.nav-link');
            const logo = document.querySelector('.logo');
            const social = document.querySelectorAll('.social-icons-vertical a');

            window.addEventListener('scroll', function () {
                if (window.scrollY > 50) {
                    header.classList.add('scrolled');
                    header.classList.remove('transparent');
                    navLinks.forEach(el => el.style.color = "black");
                    logo.style.filter = "invert(0)";
                    // social.forEach(el => el.classList.add('white-bg'));
                    
                } else {
                    header.classList.remove('scrolled');
                    header.classList.add('transparent');
                    navLinks.forEach(el => el.style.color = "white");
                    logo.style.filter = "invert(1)";
                    // social.forEach(el => el.classList.remove('white-bg'));
                }
            });
        });


        // Slider
        var swiper = new Swiper('.swiper-container', {
            loop: true,
            autoplay: {
                delay: 3000,
                disableOnInteraction: false,
            },
            pagination: {
                el: '.swiper-pagination',
                clickable: true,
            },
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
            breakpoints: {
                768: {
                    slidesPerView: 2,
                },
                1024: {
                    slidesPerView: 3,
                }
            }
        });



        // Snow effect
        document.addEventListener("DOMContentLoaded", function () {
            const snowContainer = document.querySelector(".snow-container");

            const particlesPerThousandPixels = 0.03;
            const fallSpeed = 0.57;
            const pauseWhenNotActive = true;
            const maxSnowflakes = 200;
            const snowflakes = [];

            let snowflakeInterval;
            let isTabActive = true;

            function resetSnowflake(snowflake) {
                const size = Math.random() * 5 + 1;
                const viewportWidth = window.innerWidth - size; // Adjust for snowflake size
                const viewportHeight = window.innerHeight;

                snowflake.style.width = `${size}px`;
                snowflake.style.height = `${size}px`;
                snowflake.style.left = `${Math.random() * viewportWidth}px`; // Constrain within viewport width
                snowflake.style.top = `-${size}px`;

                const animationDuration = (Math.random() * 3 + 2) / fallSpeed;
                snowflake.style.animationDuration = `${animationDuration}s`;
                snowflake.style.animationTimingFunction = "linear";
                snowflake.style.animationName =
                    Math.random() < 0.5 ? "fall" : "diagonal-fall";

                setTimeout(() => {
                    if (parseInt(snowflake.style.top, 10) < viewportHeight) {
                        resetSnowflake(snowflake);
                    } else {
                        snowflake.remove(); // Remove when it goes off the bottom edge
                    }
                }, animationDuration * 1000);
            }

            function createSnowflake() {
                if (snowflakes.length < maxSnowflakes) {
                    const snowflake = document.createElement("div");
                    snowflake.classList.add("snowflake");
                    snowflakes.push(snowflake);
                    snowContainer.appendChild(snowflake);
                    resetSnowflake(snowflake);
                }
            }

            function generateSnowflakes() {
                const numberOfParticles =
                    Math.ceil((window.innerWidth * window.innerHeight) / 1000) *
                    particlesPerThousandPixels;
                const interval = 5000 / numberOfParticles;

                clearInterval(snowflakeInterval);
                snowflakeInterval = setInterval(() => {
                    if (isTabActive && snowflakes.length < maxSnowflakes) {
                        requestAnimationFrame(createSnowflake);
                    }
                }, interval);
            }

            function handleVisibilityChange() {
                if (!pauseWhenNotActive) return;

                isTabActive = !document.hidden;
                if (isTabActive) {
                    generateSnowflakes();
                } else {
                    clearInterval(snowflakeInterval);
                }
            }

            generateSnowflakes();

            window.addEventListener("resize", () => {
                clearInterval(snowflakeInterval);
                setTimeout(generateSnowflakes, 1000);
            });

            document.addEventListener("visibilitychange", handleVisibilityChange);
        });





    </script>
</body>

</html>